q()
library(swirl)
install.packages("swirl")
library(swirl)
install.packages("swirl")
install.packages("swirl")
setInternet2(TRUE)
install.packages("data.table")
getwd()
list()
ls()
data1 <- read.csv(cats_sample.csv, sep = "")
ls
ls()
dir()
data1 <- read.csv("cats_sample.csv", sep = "")
data1
data1 <- read.csv("cats_sample.csv", sep = ",")
data1
str(data1)
male <- data1[Sex = "M"]
male <- data1["M",]
male
male <- data1[M,]
male <- data1['M',]
male
male <- data1[Sex = 'M',]
View(data1)
data1.Sex
data1[Sex,]
summary.data.frame(data1)
male <- data1["M", ]
male
male <- data1[M, ]
male <- data1[sex = "M", ]
data1$Sex
male <- data1[data1$Sex = "M", ]
cl
split(data1, Sex,)
split(data1, data1$Sex,)
news <- split(data1, data1$Sex,)
news
summary(news)
news$F
summary(news$F)
summary(news$M)
var(news$F$Bwt)
quantile(news$F)
quantile(news$F$Bwt)
var(news$M$Bwt)
sd(news$M$Bwt)
sd(news$F$Bwt)
flats <- read.csv("flats.csv",)
flats
flats <- read.csv("flats.csv", stringsAsFactors= FALSE, encoding = "UTF-8")
flats
sad <- split(flats, as.factor(flats$Місто)
)
sad
str(sad)
odesa <- sad$Одеса
odesa
odesa3 <- split(odesa, as.factor(odesa$Кімнат))
odesa3
str(odesa3)
lviv <- sad$Львів
lviv1 <- split(lviv, as.factor(lviv$Кімнат))
lviv1
summary(lviv1$1)
summary(lviv1$`1`)
lviv2 <- lviv1$`1`
lviv2
median(lviv2$Загальна_площа)
setInternet2()
setInternet2(use = NA)
setInternet2(NA)
install.packages("swirl")
ls
ls()
pwd()
pwd
a <- available.packages()
a
str(a)
head(a)
install.packages(dplyr)
install.packages("dplyr")
install.packages("gplot")
install.packages("ggplot")
install.packages("ggplot2")
getwd()
dir()
setwd("C:/Documents and Settings/Максуд/Мои документы/RStatistics/Week2")
getwd()
dir()
flats <- read.csv("flats.csv", stringsAsFactors=FALSE, dec= ",")
str(flats)
flats <- read.csv("flats.csv", stringsAsFactors=FALSE, dec= ",", encoding="UTF-8")
str(flats)
View(flats)
count(flats, Місто)
library(dplyr)
library(ggplot2)
count(flats, Місто)
View(flats)
flats %>%
count(Місто) %>%
arrange(n)
flats %>%
filter(Кімнат == 2) %>%
filter(Місто != "Києво-Святошинський") %>%
count(Місто) %>%
arrange(desc(n))
flats %>%
filter(Кімнат == 1) %>%
filter(Місто != "Києво-Святошинський") %>%
group_by(Місто) %>%
summarise(mean=mean(Загальна_площа), sd=sd(Загальна_площа))
flats %>%
filter(Кімнат == 1) %>%
filter(Місто != "Києво-Святошинський") %>%
group_by(Місто) %>%
summarise(median=median(Загальна_площа), sd=sd(Загальна_площа))
filter(Кімнат == 1) %>%
)
filter(Місто != "Києво-Святошинський") %>%
)
source('~/RStatistics/Week2/lab1.r', encoding = 'UTF-8')
setwd("C:/Documents and Settings/Максуд/Мои документы/RStatistics/Week2")
flats <- read.csv("flats.csv", stringsAsFactors=FALSE, dec= ",", encoding="UTF-8")
#Параметр	encoding="UTF-8"	використовується	для	коректного	відображення
#Lab1
library(dplyr)
library(ggplot2)
setwd("C:/Documents and Settings/Максуд/Мои документы/RStatistics/Week2")
flats <- read.csv("flats.csv", stringsAsFactors=FALSE, dec= ",", encoding="UTF-8")
#Параметр	encoding="UTF-8"	використовується	для	коректного	відображення
#кирилиці	у	OS	Windows.
glimpse(flats)
#функція виводить основну інформацію
count(flats, Місто)
#підраховує к-сть значень змінної місто в файлі
flats %>%
count(Місто) %>%
arrange(n)
#оператор	%>%,	який	дозволяє	застосувати	наступну	команду	до	результатів	виконання	поточної
# arrange сортує значення змінної, отриманої в count
flats %>%
filter(Кімнат == 2) %>%
filter(Місто != "Києво-Святошинський") %>%
count(Місто) %>%
arrange(desc(n))
#фільтрування значень змінної "кімнат" та "місто"
flats %>%
filter(Кімнат == 1) %>%
filter(Місто != "Києво-Святошинський") %>%
group_by(Місто) %>%
summarise(mean=mean(Загальна_площа), sd=sd(Загальна_площа))
#фільтруємо + групуємо по містам + виконуємо обрахунки
ggplot(flats, aes(x=Кімнат)) +
geom_bar(fill="lightblue",
col="grey") +
ylab('Кількість')
ggplot(flats, aes(x=Загальна_площа)) +
geom_histogram(breaks=seq(0, 250, by = 50),
fill="lightblue",
col="grey") +
ylab('Кількість')
ggplot(flats, aes(x=Загальна_площа, y=Ціна)) +
geom_point()
ggplot(flats, aes(x=Загальна_площа, y=Ціна)) +
coord_flip()
View(flats)
ggplot(flats, aes(x=Місто, y=Ціна)) +
coord_flip()
ggplot(flats, aes(x=Місто, y=Ціна)) +
fill="lightblue",
col="grey") +
coord_flip()
ggplot(flats, aes(x=Місто, y=Ціна)) +
fill="lightblue",
col="grey") +
coord_flip()
ggplot(flats, aes(x=Ціна, y=Місто)) +
coord_flip()
ggplot(flats, aes(x=Місто, y=Ціна)) +
coord_flip()
ggplot(flats, aes(x=Ціна)) +
geom_histogram(breaks=seq(0, 12500000, by = 50000),
fill="lightblue",
col="grey") +
ylab('Кількість')
ggplot(flats, aes(x=Ціна, y=Загальна_площа)) +
geom_point()
ggplot(flats, aes(x=Загальна_площа, y=Ціна)) +
geom_point()
ggplot(flats, aes(x=Місто, y=Ціна)) +
coord_flip(fill="lightblue",
col="grey")
ggplot(flats, aes(x=Місто, y=Ціна)) +
geom_boxplot() +
coord_flip()
flats1 <- flats %>%
filter(Кімнат == 2) %>%
filter(Місто != "Києво-Святошинський")
flats1 <- flats %>%
filter(Кімнат == 2) %>%
filter(Місто != "Київ")
ggplot(flats1, aes(x=Місто, y=Ціна)) +
geom_boxplot() +
coord_flip()
flats1 <- flats %>%
filter(Кімнат == 1) %>%
filter(Місто != "Київ")
ggplot(flats1, aes(x=Місто, y=Ціна)) +
geom_boxplot() +
coord_flip()
ggplot(flats1, aes(x=Місто, y=Ціна)) +
geom_boxplot()
ggplot(flats1, aes(x=Ціна, y=Місто)) +
geom_boxplot()
ggplot(flats1, aes(x=Місто, y=Ціна)) +
geom_boxplot() +
coord_flip()
ggplot(flats1, aes(x=Місто, y=Ціна)) +
geom_boxplot()
ggplot(flats1, aes(x=Місто, y=Ціна)) +
geom_boxplot() +
coord_flip() #переворот сис координат
